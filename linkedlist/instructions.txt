public class LinkedList<T> {
    private static class Node<T> {
        T data;
        Node<T> next;

        Node(T data) {
            this.data = data;
        }
    }

    private Node<T> head;
    private int size;

    public void addFirst(T data) { /* implementation */ }
    public void addLast(T data) { /* implementation */ }
    public void add(int index, T data) { /* implementation */ }

    public T removeFirst() { /* implementation */ }
    public T removeLast() { /* implementation */ }
    public T remove(int index) { /* implementation */ }

    public T get(int index) { /* implementation */ }
    public void set(int index, T data) { /* implementation */ }

    public boolean contains(T data) { /* implementation */ }
    public int indexOf(T data) { /* implementation */ }
    public int size() { return size; }
    public boolean isEmpty() { return size == 0; }
    public void clear() { /* implementation */ }

    @Override
    public String toString() {
        /* String representation */
    }
}